apply plugin: 'build-dashboard' // adds "buildDashboard" task

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

buildscript {
	repositories {
		jcenter()
    	maven {
      		url "https://plugins.gradle.org/m2/"
    	}
  	}

 	dependencies {
		// shadow-plugin (http://imperceptiblethoughts.com/shadow/)
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
		// annotation processor https://plugins.gradle.org/plugin/net.ltgt.apt
		classpath "net.ltgt.gradle:gradle-apt-plugin:0.9"
	}
}


// загрузить properties в зависимости от типа стенда
def loadDockerProperties(type) {
	Properties props = new Properties()
	def name = "${projectDir}/docker-${type}.properties"
	println "Reading docker properties: ${name}"
	if (new File(name).exists() ) {
		props.load(new FileInputStream(name))
	} else {
		throw new IllegalStateException("Not found docker properties ${name} file.");
	}
	if (project.ext.stand_type == 'test') {
		props.deploy_dir = props.deploy_dir + "_${System.currentTimeMillis()}"
		props.data_dir = props.deploy_dir + "/data"
		props.logs_dir = props.deploy_dir + "/logs"
	}
	return  props;
}

// тип стенда по-умолчанию
// (может быть переопределён параметром к скрипту
// 'gradle -Pstand_type=test')
if (!project.ext.has('stand_type'))
	project.ext.stand_type='development'
def props = loadDockerProperties(project.ext.stand_type)
project.ext.stand = props


// configure dependencies
apply from: 'build_scripts/dependencies.gradle'
// apply tasks
apply from: 'build_scripts/build-tasks.gradle'
